services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:delegated
      - frontend_node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app:delegated
      - backend_node_modules:/app/node_modules
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=walletoo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  studio:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app:delegated
      - studio_node_modules:/app/node_modules
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/walletoo
    command: bunx prisma studio --port 5555 --hostname 0.0.0.0
    depends_on:
      - db

volumes:
  postgres_data:
  frontend_node_modules:
  backend_node_modules:
  studio_node_modules:
